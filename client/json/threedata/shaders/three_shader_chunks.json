[
  {
    "SHADER_CHUNKS": {
      "LOAD_CHUNK_INDEX":[
        "INSTANCING_CHUNKS"
      ],

      "INSTANCING_CHUNKS":{



        "enterVoidMain":["void main(){"],
        "exitVoidMain":["}"],
        "vx_view":[
          "precision highp float;",
          "uniform mat4 modelViewMatrix;",
          "uniform mat4 projectionMatrix;"
        ],

        "vx_position":[
          "attribute vec3 position;",
          "attribute vec3 normal;"
        ],

        "fx_view":[
          "precision highp float;"
        ],

        "vx_instancing_normal":[
          "attribute vec3 vertexNormal;"
        ],

        "vx_instancing_scale3d":[
          "attribute vec3 scale3d;"
        ],

        "vx_instancing_acceleration":[
          "attribute vec4 acceleration;"
        ],


        "vx_predictive_simulation":[
          "varying vec3 velocityOffset;",
          "varying float velocityFactor;",
          "varying vec3 offset;",
          "varying float size;",
          "varying float effectAge;",
          "uniform float systemTime;",
          "attribute float startTime;",
          "attribute float duration;",
          "attribute vec3 vertexPosition;",
          "attribute vec4 offsetSize;",
          "attribute vec4 velocity;"
        ],

        "vx_data_texture":[
          "uniform sampler2D data_texture;",
          "uniform float data_rows;",
          "attribute vec4 texelRowSelect;",

          "attribute vec4 diffusors;",

          "varying vec2 pixelSelector;",
          "varying vec4 sampledDataTexel;",

          "varying float rowColor;",
          "varying float rowAlpha;",
          "varying float sampledAlpha;",
          "varying float rowSize;",
          "varying float rowDiffusion;",
          "varying float progress;",
          "varying float pixelSizeSampler;",
          "varying float sampledSizeFactor;"
        ],

        "vx_billboard":[
          "varying vec4 billboardFacing;"
        ],

        "vx_size":[
          "attribute float size;"
        ],

        "vx_spatial":[
          "attribute vec3 vertexPosition;",
          "attribute vec3 offset;"
        ],

        "vx_orientation_quat":[
          "attribute vec4 orientation;"
        ],

        "vx_uv":[
          "attribute vec2 uv;",
          "varying vec2 vUv;"
        ],


        "fx_uv":[
          "uniform sampler2D map;",
          "varying vec2 vUv;"
        ],

        "vx_oceanTextureLayers":[
          "uniform float systemTime;",
          "uniform vec2 tx0repeat;",
          "uniform vec2 tx1repeat;",
          "uniform vec2 tx2repeat;",
          "varying float height;",
          "varying float slope;",
          "varying vec2 vUv0;",
          "varying vec2 vUv1;",
          "varying vec2 vUv2;"

        ],

        "fx_oceanTextureLayers":[
          "uniform float systemTime;",
          "varying float height;",
          "varying float slope;",
          "varying vec2 vUv0;",
          "varying vec2 vUv1;",
          "varying vec2 vUv2;",
          "uniform sampler2D tx0;",
          "uniform sampler2D tx1;",
          "uniform sampler2D tx2;"
        ],


        "vx_terrainTextureLayers":[
          "uniform vec2 tx0repeat;",
          "uniform vec2 tx1repeat;",
          "uniform vec2 tx2repeat;",
          "uniform vec2 tx3repeat;",
          "uniform vec2 tx4repeat;",
          "uniform vec2 tx5repeat;",
          "uniform vec2 tx6repeat;",
          "varying float height;",
          "varying float slope;",
          "varying vec2 vUv0;",
          "varying vec2 vUv1;",
          "varying vec2 vUv2;",
          "varying vec2 vUv3;",
          "varying vec2 vUv4;",
          "varying vec2 vUv5;",
          "varying vec2 vUv6;"

        ],

        "fx_terrainTextureLayers":[
          "varying float height;",
          "varying float slope;",
          "varying vec2 vUv0;",
          "varying vec2 vUv1;",
          "varying vec2 vUv2;",
          "varying vec2 vUv3;",
          "varying vec2 vUv4;",
          "varying vec2 vUv5;",
          "varying vec2 vUv6;",

          "uniform sampler2D tx0;",
          "uniform sampler2D tx1;",
          "uniform sampler2D tx2;",
          "uniform sampler2D tx3;",
          "uniform sampler2D tx4;",
          "uniform sampler2D tx5;",
          "uniform sampler2D tx6;"
        ],

        "vx_simple_light":[
          "uniform vec3 ambientLightColor;",
          "uniform vec3 sunLightColor;"
        ],

        "vx_sunLightDirection":[
          "uniform vec3 sunLightDirection;",
          "varying vec3 sunDir;"
        ],

        "fx_sunLight":[
          "varying vec3 sunDir;"
        ],

        "vx_fog":[
          "uniform vec3 fogColor;",
          "uniform float fogDensity;",
          "varying float fogDepth;",
          "varying float vFragDepth;"
        ],

        "fx_fog":[

          "uniform vec3 fogColor;",
          "uniform float fogDensity;",

          "varying float fogDepth;",
          "varying float vFragDepth;"

        ],

        "vx_uv_tiles":[
          "attribute vec2 tileindex;",
          "uniform vec2 tiles;",
          "varying vec2 tileOffset;"
        ],

        "fx_uv_tiles":[
          "varying vec2 tileOffset;"
        ],

        "vx_init":[
          "uniform float time;",
          "attribute vec2 uv;",
          "attribute vec3 translate;",
          "varying vec2 vUv;",
          "varying float vScale;",
          "attribute vec3 position;",
          "attribute float sizeFactor;"
        ],

        "fx_init":[
          "uniform sampler2D map;",
          "varying vec2 vUv;",
          "varying float vScale;",
          "vec3 HUEtoRGB(float H){",
          "H = mod(H,1.0);",
          "float R = abs(H * 6.0 - 3.0) - 1.0;",
          "float G = 2.0 - abs(H * 6.0 - 2.0);",
          "float B = 2.0 - abs(H * 6.0 - 4.0);",
          "return clamp(vec3(R,G,B),0.0,1.0);",
          "}",
          "vec3 HSLtoRGB(vec3 HSL){",
          "vec3 RGB = HUEtoRGB(HSL.x);",
          "float C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;",
          "return (RGB - 0.5) * C + HSL.z;",
          "}",
          ""
        ],
        "vx_attribute_vertexColor4":[
          "attribute vec4 vertexColor;",
          "varying vec4 vColor;"
        ],

        "vx_attribute_vertexColor":[
          "attribute vec3 vertexColor;",
          "attribute float vertexAlpha;",
          "varying vec4 vColor;"
        ],

        "fx_varying_vColor4":[
          "varying vec4 vColor;"
        ],

        "fx_attribute_vertexColor":[
          "varying vec4 vColor;"
        ],

        "fx_alphaTest":[
          "uniform float alphaTest;"
        ]
      }
    }
  }
]
